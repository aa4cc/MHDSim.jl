var documenterSearchIndex = {"docs":
[{"location":"#Magnetohydrodynamics-Simulator-(MHDSim)","page":"Home","title":"Magnetohydrodynamics Simulator (MHDSim)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package provides a Julia simulation of an inductionless magnetohydrodynamic (MHD) flow in the low-conductivity regime. It models the behavior of a fluid in a cylindrical geometry influenced by external electric and magnetic fields generated by electrodes and electromagnets.","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For usage instructions, please refer to the examples/run_simulation.jl file, which contains a simple example of how to set up and run the simulation.","category":"page"},{"location":"#Details","page":"Home","title":"Details","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The simulation is based on the incompressible Navier–Stokes equations:","category":"page"},{"location":"","page":"Home","title":"Home","text":"fracpartial mathbfupartial t + (mathbfu cdot nabla) mathbfu = nabla p + nu nabla^2 mathbfu + mathbff quad nabla cdot mathbfu = 0","category":"page"},{"location":"","page":"Home","title":"Home","text":"where ( \\mathbf{u} ) is the velocity field, ( p ) is the pressure, ( \\nu ) is the kinematic viscosity, and ( \\mathbf{f} ) represents the body force acting on the fluid — specifically, the Lorentz force:","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathbff = sigma mathbfE times mathbfB","category":"page"},{"location":"","page":"Home","title":"Home","text":"with sigma the electrical conductivity, mathbfE the electric field, and mathbfB the magnetic field.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The electric field is assumed to be generated by a set of electrodes, and the magnetic field by a set of electromagnets. The fields are assumed to admit the decomposition:","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathbfE(t mathbfr) = sum_i=1^n_mathrmel phi_i(t) mathbfE_i(mathbfr) quad\nmathbfB(t mathbfr) = sum_j=1^n_mathrmmag psi_j(t) mathbfB_j(mathbfr)","category":"page"},{"location":"","page":"Home","title":"Home","text":"where phi_i(t) and psi_j(t) are the time-dependent control signals for the electrodes and electromagnets, respectively, and mathbfE_i(mathbfr), mathbfB_j(mathbfr) are the spatial field distributions generated by each element. These field components must be provided by the user as part of the simulation setup.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The simulation is implemented using the Finite Element Method (FEM) with a Taylor–Hood (Q2/Q1) element pair for the velocity and pressure fields. Time integration is performed using a semi-implicit BDF2 scheme, with an Iterative Pressure Correction Scheme (IPCS) in rotational form used to split the velocity and pressure updates (see e.g. Guermond et al. 2006).","category":"page"},{"location":"#Citation","page":"Home","title":"Citation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For more details, see the Master's thesis of Adam Uchytil:   Feedback Control of Magnetohydrodynamic Flow Using Data-Driven Methods","category":"page"}]
}
